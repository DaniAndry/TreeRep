{"id":68,"assetBundleId":-2,"data":[[],"Autodesk Interactive",null,["DIRECTIONAL","DIRLIGHTMAP_COMBINED","FOG_EXP","FOG_EXP2","FOG_LINEAR","LIGHTMAP_ON","LIGHTPROBE_SH","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","VERTEXLIGHT_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_EMISSION","_GLOSSYREFLECTIONS_OFF","_METALLICGLOSSMAP","_NORMALMAP","_PARALLAXMAP","_SPECGLOSSMAP","_SPECULARHIGHLIGHTS_OFF","DIRECTIONAL_COOKIE","POINT","POINT_COOKIE","SHADOWS_DEPTH","SPOT","DYNAMICLIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__","_","SHADOWS_CUBE"],[[0,1,"FORWARD",4,"",0,[4,null],[0,"_ZWrite"],[2,null],[[0,"_SrcBlend"],[0,"_DstBlend"],[0,null]],[[0,"_SrcBlend"],[0,"_DstBlend"],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["LIGHTMODE","FORWARDBASE"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],["DIRECTIONAL","DYNAMICLIGHTMAP_ON","FOG_EXP","FOG_EXP2","FOG_LINEAR","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","VERTEXLIGHT_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_EMISSION","_GLOSSYREFLECTIONS_OFF","_METALLICGLOSSMAP","_NORMALMAP","_SPECGLOSSMAP","_SPECULARHIGHLIGHTS_OFF","__","_"],[[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"],1],[["_","_NORMALMAP"],1],[["_","_ALPHATEST_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON"],1],[["_","_METALLICGLOSSMAP"],1],[["_","_SPECGLOSSMAP"],1],[["DIRECTIONAL"],0],[["DIRECTIONAL","LIGHTPROBE_SH"],0],[["DIRECTIONAL","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"],0],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON"],0],[["DIRECTIONAL","LIGHTMAP_ON"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON"],0],[["DIRECTIONAL","LIGHTMAP_ON","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","SHADOWS_SCREEN"],0],[["DIRECTIONAL","SHADOWS_SCREEN","LIGHTPROBE_SH"],0],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"],0],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0]],[[0,1,["DIRECTIONAL"],"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat10;\nmediump float u_xlat16_23;\nmediump float u_xlat16_25;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat7.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1 = (-u_xlat7.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat7.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat7.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat7.x = inversesqrt(u_xlat7.x);\n    u_xlat7.xyz = u_xlat7.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_8.x = dot(vs_TEXCOORD1.xyz, u_xlat7.xyz);\n    u_xlat16_8.x = u_xlat16_8.x + u_xlat16_8.x;\n    u_xlat16_8.xyz = u_xlat7.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_8.xyz, u_xlat16_1);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = log2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.y;\n    u_xlat16_2.x = exp2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_3);\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat7.xyz);\n    u_xlat10 = u_xlat3.x;\n    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat7.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat7.x = dot(u_xlat7.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat16_4.xyz = u_xlat7.xxx * _LightColor0.xyz;\n    u_xlat7.x = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = u_xlat7.x * u_xlat7.x;\n    u_xlat3.x = u_xlat7.x * u_xlat7.x;\n    u_xlat16_23 = (-u_xlat10) + 1.0;\n    u_xlat7.x = u_xlat16_23 * u_xlat16_23;\n    u_xlat7.x = u_xlat16_23 * u_xlat7.x;\n    u_xlat7.x = u_xlat16_23 * u_xlat7.x;\n    u_xlat16_23 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_25 = (-u_xlat16_23) + 1.0;\n    u_xlat16_25 = u_xlat0.x + u_xlat16_25;\n    u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat10_0.xzw = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_5.xyz = _Color.xyz * u_xlat10_0.xzw + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat0.xzw = u_xlat10_0.xzw * _Color.xyz;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_6.xyz = vec3(u_xlat16_25) + (-u_xlat16_5.xyz);\n    u_xlat16_6.xyz = u_xlat7.xxx * u_xlat16_6.xyz + u_xlat16_5.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_6.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat7.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat7.x = u_xlat7.x * 16.0;\n    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat7.xxx;\n    u_xlat16_5.xyz = u_xlat0.xzw * vec3(u_xlat16_23) + u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0],[0,1,["DIRECTIONAL"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nmediump float u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat10;\nmediump float u_xlat16_23;\nmediump float u_xlat16_25;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat7.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1.x = (-u_xlat7.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat7.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat7.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat7.x = inversesqrt(u_xlat7.x);\n    u_xlat7.xyz = u_xlat7.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_8.x = dot(vs_TEXCOORD1.xyz, u_xlat7.xyz);\n    u_xlat16_8.x = u_xlat16_8.x + u_xlat16_8.x;\n    u_xlat16_8.xyz = u_xlat7.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_8.xyz, u_xlat16_1.x);\n    u_xlat16_2.x = u_xlat16_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = log2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.y;\n    u_xlat16_2.x = exp2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * u_xlat16_2.xxx;\n    u_xlat16_3 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat16_3);\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat7.xyz);\n    u_xlat10 = u_xlat3.x;\n    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat7.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat7.x = dot(u_xlat7.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat16_4.xyz = u_xlat7.xxx * _LightColor0.xyz;\n    u_xlat7.x = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = u_xlat7.x * u_xlat7.x;\n    u_xlat3.x = u_xlat7.x * u_xlat7.x;\n    u_xlat16_23 = (-u_xlat10) + 1.0;\n    u_xlat7.x = u_xlat16_23 * u_xlat16_23;\n    u_xlat7.x = u_xlat16_23 * u_xlat7.x;\n    u_xlat7.x = u_xlat16_23 * u_xlat7.x;\n    u_xlat16_23 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_25 = (-u_xlat16_23) + 1.0;\n    u_xlat16_25 = u_xlat0.x + u_xlat16_25;\n    u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_5.xyz = _Color.xyz * u_xlat16_0.xzw + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat0.xzw = u_xlat16_0.xzw * _Color.xyz;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_6.xyz = vec3(u_xlat16_25) + (-u_xlat16_5.xyz);\n    u_xlat16_6.xyz = u_xlat7.xxx * u_xlat16_6.xyz + u_xlat16_5.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_6.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat7.x = texture(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat7.x = u_xlat7.x * 16.0;\n    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat7.xxx;\n    u_xlat16_5.xyz = u_xlat0.xzw * vec3(u_xlat16_23) + u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",1,0],[0,1,["DIRECTIONAL","LIGHTPROBE_SH"],"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    vs_TEXCOORD5.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat12;\nmediump float u_xlat16_29;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat9.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1 = (-u_xlat9.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat9.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat9.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat9.x = inversesqrt(u_xlat9.x);\n    u_xlat9.xyz = u_xlat9.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat9.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat9.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = log2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.y;\n    u_xlat16_2.x = exp2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_3);\n    u_xlat16_4.xyz = vec3(u_xlat10_3) * vs_TEXCOORD5.xyz;\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat9.xyz);\n    u_xlat12 = u_xlat3.x;\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat9.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat9.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat9.xxx * _LightColor0.xyz;\n    u_xlat9.x = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = u_xlat9.x * u_xlat9.x;\n    u_xlat3.x = u_xlat9.x * u_xlat9.x;\n    u_xlat16_29 = (-u_xlat12) + 1.0;\n    u_xlat9.x = u_xlat16_29 * u_xlat16_29;\n    u_xlat9.x = u_xlat16_29 * u_xlat9.x;\n    u_xlat9.x = u_xlat16_29 * u_xlat9.x;\n    u_xlat16_29 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_31 = (-u_xlat16_29) + 1.0;\n    u_xlat16_31 = u_xlat0.x + u_xlat16_31;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat10_0.xzw = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_0.xzw + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat0.xzw = u_xlat10_0.xzw * _Color.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_29) * u_xlat0.xzw;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = u_xlat9.xxx * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_2.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0],[0,1,["DIRECTIONAL","LIGHTPROBE_SH"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    vs_TEXCOORD5.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nmediump float u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat12;\nmediump float u_xlat16_29;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat9.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1.x = (-u_xlat9.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat9.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat9.x = inversesqrt(u_xlat9.x);\n    u_xlat9.xyz = u_xlat9.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat9.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat9.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1.x);\n    u_xlat16_2.x = u_xlat16_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = log2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.y;\n    u_xlat16_2.x = exp2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * u_xlat16_2.xxx;\n    u_xlat16_3 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat16_3);\n    u_xlat16_4.xyz = vec3(u_xlat16_3) * vs_TEXCOORD5.xyz;\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat9.xyz);\n    u_xlat12 = u_xlat3.x;\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat9.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat9.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat9.xxx * _LightColor0.xyz;\n    u_xlat9.x = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = u_xlat9.x * u_xlat9.x;\n    u_xlat3.x = u_xlat9.x * u_xlat9.x;\n    u_xlat16_29 = (-u_xlat12) + 1.0;\n    u_xlat9.x = u_xlat16_29 * u_xlat16_29;\n    u_xlat9.x = u_xlat16_29 * u_xlat9.x;\n    u_xlat9.x = u_xlat16_29 * u_xlat9.x;\n    u_xlat16_29 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_31 = (-u_xlat16_29) + 1.0;\n    u_xlat16_31 = u_xlat0.x + u_xlat16_31;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat16_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat16_0.xzw + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat0.xzw = u_xlat16_0.xzw * _Color.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_29) * u_xlat0.xzw;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = u_xlat9.xxx * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_2.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat0.x = texture(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",1,0],[0,1,["DIRECTIONAL","_EMISSION"],"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat10;\nmediump float u_xlat16_23;\nmediump float u_xlat16_25;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat7.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1 = (-u_xlat7.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat7.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat7.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat7.x = inversesqrt(u_xlat7.x);\n    u_xlat7.xyz = u_xlat7.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_8.x = dot(vs_TEXCOORD1.xyz, u_xlat7.xyz);\n    u_xlat16_8.x = u_xlat16_8.x + u_xlat16_8.x;\n    u_xlat16_8.xyz = u_xlat7.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_8.xyz, u_xlat16_1);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = log2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.y;\n    u_xlat16_2.x = exp2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_3);\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat7.xyz);\n    u_xlat10 = u_xlat3.x;\n    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat7.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat7.x = dot(u_xlat7.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat16_4.xyz = u_xlat7.xxx * _LightColor0.xyz;\n    u_xlat7.x = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = u_xlat7.x * u_xlat7.x;\n    u_xlat3.x = u_xlat7.x * u_xlat7.x;\n    u_xlat16_23 = (-u_xlat10) + 1.0;\n    u_xlat7.x = u_xlat16_23 * u_xlat16_23;\n    u_xlat7.x = u_xlat16_23 * u_xlat7.x;\n    u_xlat7.x = u_xlat16_23 * u_xlat7.x;\n    u_xlat16_23 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_25 = (-u_xlat16_23) + 1.0;\n    u_xlat16_25 = u_xlat0.x + u_xlat16_25;\n    u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat10_0.xzw = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_5.xyz = _Color.xyz * u_xlat10_0.xzw + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat0.xzw = u_xlat10_0.xzw * _Color.xyz;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_6.xyz = vec3(u_xlat16_25) + (-u_xlat16_5.xyz);\n    u_xlat16_6.xyz = u_xlat7.xxx * u_xlat16_6.xyz + u_xlat16_5.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_6.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat7.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat7.x = u_xlat7.x * 16.0;\n    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat7.xxx;\n    u_xlat16_5.xyz = u_xlat0.xzw * vec3(u_xlat16_23) + u_xlat16_5.xyz;\n    u_xlat16_2.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat16_2.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0],[0,1,["DIRECTIONAL","_EMISSION"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nmediump float u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat10;\nmediump float u_xlat16_23;\nmediump float u_xlat16_25;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat7.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1.x = (-u_xlat7.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat7.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat7.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat7.x = inversesqrt(u_xlat7.x);\n    u_xlat7.xyz = u_xlat7.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_8.x = dot(vs_TEXCOORD1.xyz, u_xlat7.xyz);\n    u_xlat16_8.x = u_xlat16_8.x + u_xlat16_8.x;\n    u_xlat16_8.xyz = u_xlat7.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_8.xyz, u_xlat16_1.x);\n    u_xlat16_2.x = u_xlat16_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = log2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.y;\n    u_xlat16_2.x = exp2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * u_xlat16_2.xxx;\n    u_xlat16_3 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat16_3);\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat7.xyz);\n    u_xlat10 = u_xlat3.x;\n    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat7.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat7.x = dot(u_xlat7.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat16_4.xyz = u_xlat7.xxx * _LightColor0.xyz;\n    u_xlat7.x = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = u_xlat7.x * u_xlat7.x;\n    u_xlat3.x = u_xlat7.x * u_xlat7.x;\n    u_xlat16_23 = (-u_xlat10) + 1.0;\n    u_xlat7.x = u_xlat16_23 * u_xlat16_23;\n    u_xlat7.x = u_xlat16_23 * u_xlat7.x;\n    u_xlat7.x = u_xlat16_23 * u_xlat7.x;\n    u_xlat16_23 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_25 = (-u_xlat16_23) + 1.0;\n    u_xlat16_25 = u_xlat0.x + u_xlat16_25;\n    u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_5.xyz = _Color.xyz * u_xlat16_0.xzw + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat0.xzw = u_xlat16_0.xzw * _Color.xyz;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_6.xyz = vec3(u_xlat16_25) + (-u_xlat16_5.xyz);\n    u_xlat16_6.xyz = u_xlat7.xxx * u_xlat16_6.xyz + u_xlat16_5.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_6.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat7.x = texture(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat7.x = u_xlat7.x * 16.0;\n    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat7.xxx;\n    u_xlat16_5.xyz = u_xlat0.xzw * vec3(u_xlat16_23) + u_xlat16_5.xyz;\n    u_xlat16_2.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat16_2.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",1,0],[0,1,["DIRECTIONAL","LIGHTPROBE_SH","_EMISSION"],"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    vs_TEXCOORD5.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat12;\nmediump float u_xlat16_29;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat9.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1 = (-u_xlat9.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat9.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat9.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat9.x = inversesqrt(u_xlat9.x);\n    u_xlat9.xyz = u_xlat9.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat9.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat9.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = log2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.y;\n    u_xlat16_2.x = exp2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_3);\n    u_xlat16_4.xyz = vec3(u_xlat10_3) * vs_TEXCOORD5.xyz;\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat9.xyz);\n    u_xlat12 = u_xlat3.x;\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat9.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat9.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat9.xxx * _LightColor0.xyz;\n    u_xlat9.x = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = u_xlat9.x * u_xlat9.x;\n    u_xlat3.x = u_xlat9.x * u_xlat9.x;\n    u_xlat16_29 = (-u_xlat12) + 1.0;\n    u_xlat9.x = u_xlat16_29 * u_xlat16_29;\n    u_xlat9.x = u_xlat16_29 * u_xlat9.x;\n    u_xlat9.x = u_xlat16_29 * u_xlat9.x;\n    u_xlat16_29 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_31 = (-u_xlat16_29) + 1.0;\n    u_xlat16_31 = u_xlat0.x + u_xlat16_31;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat10_0.xzw = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_0.xzw + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat0.xzw = u_xlat10_0.xzw * _Color.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_29) * u_xlat0.xzw;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = u_xlat9.xxx * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_2.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz + u_xlat16_2.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0],[0,1,["DIRECTIONAL","LIGHTPROBE_SH","_EMISSION"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    vs_TEXCOORD5.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nmediump float u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat12;\nmediump float u_xlat16_29;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat9.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1.x = (-u_xlat9.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat9.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat9.x = inversesqrt(u_xlat9.x);\n    u_xlat9.xyz = u_xlat9.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat9.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat9.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1.x);\n    u_xlat16_2.x = u_xlat16_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = log2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.y;\n    u_xlat16_2.x = exp2(u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * u_xlat16_2.xxx;\n    u_xlat16_3 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat16_3);\n    u_xlat16_4.xyz = vec3(u_xlat16_3) * vs_TEXCOORD5.xyz;\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat9.xyz);\n    u_xlat12 = u_xlat3.x;\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat9.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat9.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat9.xxx * _LightColor0.xyz;\n    u_xlat9.x = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = u_xlat9.x * u_xlat9.x;\n    u_xlat3.x = u_xlat9.x * u_xlat9.x;\n    u_xlat16_29 = (-u_xlat12) + 1.0;\n    u_xlat9.x = u_xlat16_29 * u_xlat16_29;\n    u_xlat9.x = u_xlat16_29 * u_xlat9.x;\n    u_xlat9.x = u_xlat16_29 * u_xlat9.x;\n    u_xlat16_29 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_31 = (-u_xlat16_29) + 1.0;\n    u_xlat16_31 = u_xlat0.x + u_xlat16_31;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat16_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat16_0.xzw + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat0.xzw = u_xlat16_0.xzw * _Color.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_29) * u_xlat0.xzw;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = u_xlat9.xxx * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_2.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat0.x = texture(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz + u_xlat16_2.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",1,0]],[],0],[1,1,"FORWARD_DELTA",5,"",0,[4,null],[0,null],[2,null],[[0,"_SrcBlend"],[1,null],[0,null]],[[0,"_SrcBlend"],[1,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["LIGHTMODE","FORWARDADD"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],["DIRECTIONAL","DIRECTIONAL_COOKIE","FOG_EXP","FOG_EXP2","FOG_LINEAR","LIGHTMAP_SHADOW_MIXING","POINT","POINT_COOKIE","SHADOWS_CUBE","SHADOWS_DEPTH","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","SPOT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_METALLICGLOSSMAP","_NORMALMAP","_SPECGLOSSMAP","_SPECULARHIGHLIGHTS_OFF","__","_"],[[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"],1],[["_","_NORMALMAP"],1],[["_","_ALPHATEST_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON"],1],[["_","_METALLICGLOSSMAP"],1],[["_","_SPECGLOSSMAP"],1],[["POINT"],0],[["DIRECTIONAL"],0],[["SPOT"],0],[["POINT_COOKIE"],0],[["DIRECTIONAL_COOKIE"],0],[["POINT","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","SHADOWS_SHADOWMASK"],0],[["SPOT","SHADOWS_SHADOWMASK"],0],[["POINT_COOKIE","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL_COOKIE","SHADOWS_SHADOWMASK"],0],[["POINT","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["SPOT","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["POINT_COOKIE","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL_COOKIE","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["SPOT","SHADOWS_DEPTH"],0],[["SPOT","SHADOWS_DEPTH","LIGHTMAP_SHADOW_MIXING"],0],[["SPOT","SHADOWS_DEPTH","SHADOWS_SHADOWMASK"],0],[["SPOT","SHADOWS_DEPTH","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","SHADOWS_SCREEN"],0],[["DIRECTIONAL_COOKIE","SHADOWS_SCREEN"],0],[["DIRECTIONAL","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL_COOKIE","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL_COOKIE","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL_COOKIE","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["POINT","SHADOWS_CUBE"],0],[["POINT","SHADOWS_CUBE","LIGHTMAP_SHADOW_MIXING"],0],[["POINT","SHADOWS_CUBE","SHADOWS_SHADOWMASK"],0],[["POINT","SHADOWS_CUBE","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["POINT_COOKIE","SHADOWS_CUBE"],0],[["POINT_COOKIE","SHADOWS_CUBE","LIGHTMAP_SHADOW_MIXING"],0],[["POINT_COOKIE","SHADOWS_CUBE","SHADOWS_SHADOWMASK"],0],[["POINT_COOKIE","SHADOWS_CUBE","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0]],[[1,1,["DIRECTIONAL"],"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nlowp vec3 u_xlat10_5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = u_xlat15 * u_xlat15;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = _Glossiness;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_5.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz * u_xlat10_5.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat5.xyz = u_xlat10_5.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat16_18 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_4.xyz = u_xlat5.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0],[1,1,["DIRECTIONAL"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp sampler2D unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = u_xlat15 * u_xlat15;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = _Glossiness;\n    u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_5.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz * u_xlat16_5.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);\n    u_xlat5.xyz = u_xlat16_5.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat16_18 = (-_Metallic) * 0.959999979 + 0.959999979;\n    u_xlat16_4.xyz = u_xlat5.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",1,0]],[],0],[2,1,"ShadowCaster",8,"",0,[4,null],[1,null],[2,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["LIGHTMODE","SHADOWCASTER"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],["SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_METALLICGLOSSMAP","_SPECGLOSSMAP","_"],[[["_","_ALPHATEST_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON"],1],[["_","_METALLICGLOSSMAP"],1],[["_","_SPECGLOSSMAP"],1],[["SHADOWS_DEPTH"],0],[["SHADOWS_CUBE"],0]],[],[],0]],[],[["_Color",0,1,1,1,1,"",0],["_MainTex",4,0,0,0,0,"white",0],["_Cutoff",3,0.5,0,1,0,"",0],["_Glossiness",3,0.5,0,1,0,"",0],["_SpecGlossMap",4,0,0,0,0,"white",0],["_Metallic",3,0,0,1,0,"",0],["_MetallicGlossMap",4,0,0,0,0,"white",0],["_SpecularHighlights",2,1,0,0,0,"",0],["_GlossyReflections",2,1,0,0,0,"",0],["_BumpScale",2,1,0,0,0,"",0],["_BumpMap",4,0,0,0,0,"bump",8],["_Parallax",3,0.0199999995529652,0.00499999988824129,0.0799999982118607,0,"",0],["_ParallaxMap",4,0,0,0,0,"black",0],["_OcclusionStrength",3,1,0,1,0,"",0],["_OcclusionMap",4,0,0,0,0,"white",0],["_EmissionColor",0,0,0,0,1,"",0],["_EmissionMap",4,0,0,0,0,"white",0],["_DetailMask",4,0,0,0,0,"white",0],["_DetailAlbedoMap",4,0,0,0,0,"grey",0],["_DetailNormalMapScale",2,1,0,0,0,"",0],["_DetailNormalMap",4,0,0,0,0,"bump",8],["_UVSec",2,0,0,0,0,"",0],["_Mode",2,0,0,0,0,"",1],["_SrcBlend",2,1,0,0,0,"",1],["_DstBlend",2,0,0,0,0,"",1],["_ZWrite",2,1,0,0,0,"",1]],0,70,0,0,0]}